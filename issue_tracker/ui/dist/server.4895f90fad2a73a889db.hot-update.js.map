{"version":3,"sources":["webpack:///./server/render.jsx"],"names":["render","req","res","activeRoute","routes","find","route","matchPath","path","initialData","console","log","component","fetchData","match","index","url","indexOf","search","substr","headers","cookie","Page","userData","store","context","element","body","ReactDOMServer","renderToString","redirect","send","template","err"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,eAAeA,MAAf,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;AAC9B,MAAI;AACF,UAAMC,WAAW,GAAGC,sDAAM,CAACC,IAAP,CAClBC,KAAK,IAAIC,kEAAS,CAACN,GAAG,CAACO,IAAL,EAAWF,KAAX,CADA,CAApB;AAIA,QAAIG,WAAJ;AACAC,WAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BR,WAAW,CAACS,SAAvC;;AACA,QAAIT,WAAW,IAAIA,WAAW,CAACS,SAAZ,CAAsBC,SAAzC,EAAoD;AAClD,YAAMC,KAAK,GAAGP,kEAAS,CAACN,GAAG,CAACO,IAAL,EAAWL,WAAX,CAAvB;AACA,YAAMY,KAAK,GAAGd,GAAG,CAACe,GAAJ,CAAQC,OAAR,CAAgB,GAAhB,CAAd;AACA,YAAMC,MAAM,GAAGH,KAAK,KAAK,CAAC,CAAX,GAAed,GAAG,CAACe,GAAJ,CAAQG,MAAR,CAAeJ,KAAf,CAAf,GAAuC,IAAtD;AACAN,iBAAW,GAAG,MAAMN,WAAW,CAACS,SAAZ,CACjBC,SADiB,CACPC,KADO,EACAI,MADA,EACQjB,GAAG,CAACmB,OAAJ,CAAYC,MADpB,CAApB;AAED;;AAEDX,WAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BW,qDAAI,CAACT,SAAjC;AACA,UAAMU,QAAQ,GAAG,MAAMD,qDAAI,CAACT,SAAL,CAAeZ,GAAG,CAACmB,OAAJ,CAAYC,MAA3B,CAAvB;AAEAG,yDAAK,CAACf,WAAN,GAAoBA,WAApB;AACAe,yDAAK,CAACD,QAAN,GAAiBA,QAAjB;AAEA,UAAME,OAAO,GAAG,EAAhB;AACA,UAAMC,OAAO,gBACX,2DAAC,6DAAD;AAAc,cAAQ,EAAEzB,GAAG,CAACe,GAA5B;AAAiC,aAAO,EAAES;AAA1C,oBACE,2DAAC,qDAAD,OADF,CADF;AAKA,UAAME,IAAI,GAAGC,uDAAc,CAACC,cAAf,CAA8BH,OAA9B,CAAb;;AAEA,QAAID,OAAO,CAACT,GAAZ,EAAiB;AACfd,SAAG,CAAC4B,QAAJ,CAAa,GAAb,EAAkBL,OAAO,CAACT,GAA1B;AACD,KAFD,MAEO;AACLd,SAAG,CAAC6B,IAAJ,CAASC,4DAAQ,CAACL,IAAD,EAAOlB,WAAP,EAAoBc,QAApB,CAAjB;AACD;AACF,GAlCD,CAkCE,OAAMU,GAAN,EAAW,CAEZ;AAEF;;AAEcjC,qEAAf,E","file":"server.4895f90fad2a73a889db.hot-update.js","sourcesContent":["import React from 'react';\r\nimport ReactDOMServer from 'react-dom/server';\r\nimport { StaticRouter, matchPath } from 'react-router-dom';\r\n\r\nimport Page from '../src/Page.jsx';\r\nimport template from './template.js';\r\nimport store from '../src/store.js';\r\nimport routes from '../src/routes.js';\r\n\r\nasync function render(req, res) {\r\n  try {\r\n    const activeRoute = routes.find(\r\n      route => matchPath(req.path, route),\r\n    );\r\n  \r\n    let initialData;\r\n    console.log('eeeee==>>>>', activeRoute.component)\r\n    if (activeRoute && activeRoute.component.fetchData) {\r\n      const match = matchPath(req.path, activeRoute);\r\n      const index = req.url.indexOf('?');\r\n      const search = index !== -1 ? req.url.substr(index) : null;\r\n      initialData = await activeRoute.component\r\n        .fetchData(match, search, req.headers.cookie);\r\n    }\r\n  \r\n    console.log('ysssoo==>>>>', Page.fetchData)\r\n    const userData = await Page.fetchData(req.headers.cookie);\r\n  \r\n    store.initialData = initialData;\r\n    store.userData = userData;\r\n  \r\n    const context = {};\r\n    const element = (\r\n      <StaticRouter location={req.url} context={context}>\r\n        <Page />\r\n      </StaticRouter>\r\n    );\r\n    const body = ReactDOMServer.renderToString(element);\r\n  \r\n    if (context.url) {\r\n      res.redirect(301, context.url);\r\n    } else {\r\n      res.send(template(body, initialData, userData));\r\n    }\r\n  } catch(err) {\r\n\r\n  }\r\n  \r\n}\r\n\r\nexport default render;"],"sourceRoot":""}